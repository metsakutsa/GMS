<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tracker[0] = "";

has_result_animation_been_carried_out_through_visual_media = false;

for (var i=0;i&lt;5;i++){
    tracker[i] = instance_create(76+112*i,32,o_tracker);
}

tracker_pos = instance_create(76+76*o_room_poller.mission_index, 38, o_index);


//Player role distribution
if ds_list_size(o_room_poller.player_role_list) == 0{
    var roles = ds_list_create();
    ds_list_add(roles, spr_detective, spr_slava, spr_doge, spr_girl, spr_mb_player);
    randomize();
    ds_list_shuffle(roles);
    o_room_poller.player_role_list = roles;
}

//Create the players
player = ds_list_create();

for (var i=0; i&lt;array_length_1d(o_room_poller.playername);i++){
    var p = instance_create(62+120*i,240,o_mb_player);
    ds_list_add(player,p);

    p.name = (o_room_poller.playername[i]);
    p.sprite_index = ds_list_find_value(o_room_poller.player_role_list,i);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_result);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tracker_pos.x = 76+112*o_room_poller.mission_index;

//Mission results
if (ds_map_exists(o_room_poller.room_map, "missions")){
     var mission_list = ds_map_find_value(o_room_poller.room_map, "missions");
     
     for (var i=0; i &lt; ds_list_size(mission_list); i++){
         var mission = ds_list_find_value(mission_list,i);
         var overall_outcome = ds_map_find_value(mission, "overallOutcome");
         if overall_outcome != noone {
             if overall_outcome == "SUCCESS" {
                 tracker[i].image_index = 1;
             }
             else if overall_outcome == "FAIL" {
                 tracker[i].image_index = 2;
             }
         }
     }
}

//Team selection

if o_room_poller.status == "QUESTERS_ASSIGNED" {
    has_result_animation_been_carried_out_through_visual_media = false;
    for(var i=0; i&lt;ds_list_size(o_room_poller.questers);i++){
        
        var quester = ds_list_find_value(o_room_poller.questers,i);
        
        var idx=-1;
        for (var j=0; j&lt;ds_list_size(player);j++){
            var p = ds_list_find_value(player,j);
            if(p.name==quester){
                idx = j;
                break;
            }
        }
        
        var selection = ds_list_find_value(player, idx);
        
        selection.is_selected = true;
    }
}
if o_room_poller.overall_outcome == "SUCCESS" and !has_result_animation_been_carried_out_through_visual_media {
    result = instance_create(300,200,o_result);
    result.win = true;
    audio_play_sound(success,1,false);
    result.alarm[0] = room_speed;
    result.depth =-1;
    current_index=o_room_poller.mission_index;
    has_result_animation_been_carried_out_through_visual_media = true;
    tracker[o_room_poller.mission_index].image_index = 1;
    
    alarm[1] = room_speed*3;
    
} else if o_room_poller.overall_outcome == "FAIL" and !has_result_animation_been_carried_out_through_visual_media{
    result = instance_create(300,200,o_result);
    result.win = false;
    audio_play_sound(fail,1,false);
    result.alarm[0] = room_speed;
    result.depth =-1;
    current_index=o_room_poller.mission_index;
    has_result_animation_been_carried_out_through_visual_media = true;
    tracker[o_room_poller.mission_index].image_index = 2;
    
    alarm[1] = room_speed*3;
}
/*
if keyboard_check_pressed(vk_space){
    o_room_poller.overall_outcome = "SUCCESS";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>texture_set_interpolation(false);
draw_set_color(c_white);
draw_set_halign(fa_middle);
draw_set_font(font_missionboard);

//Draw player name
for (var i=0; i&lt;ds_list_size(player);i++){
    if ds_list_find_value(player,i).is_selected {
        draw_set_color(c_red);
    } else draw_set_color(c_white);
    draw_text_outline(ds_list_find_value(player,i).x, 
            ds_list_find_value(player,i).y-140, 
            ds_list_find_value(player,i).name,3,c_black,8);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
