<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
audio_play_sound(music,1,true)
audio_master_gain(0.5);




global.game_state = noone;
timer = room_speed;
get = "";
playername = array_create(0);
mission_index = 0;
room_map = ds_map_create();
questers = ds_list_create();
quester_list = ds_list_create();
status = "";
vote_outcome = "";
overall_outcome = "";
leader = noone;
stop = false;


player_role_list = ds_list_create();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(questers);
ds_list_destroy(quester_list);
ds_map_destroy(room_map);
ds_list_destroy(player_role_list);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room != rm_end{
    room_goto(rm_end);
}

show_debug_message("tere");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
get = http_get(global.base_url + "/api/room/" + global.room_code);

alarm[0] = timer;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if win or lose

if global.game_state == "WIN" and stop == false{
    stop = true;
    alarm[1] = room_speed*2;
}

else if global.game_state == "LOSE" and stop == false{
    stop = true;
    alarm[1] = room_speed*2;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>o_room_poller</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Receive answer

//var json = async_load[? "result"];


if ds_map_find_value(async_load, "id") == get
    {
    if ds_map_find_value(async_load, "status") == 0
       {
       var json = ds_map_find_value(async_load, "result");
       //Convert JSON to DS_MAP
        room_map = json_decode(json);
        if (room_map == -1){
            show_message("Invalid JSON");
            exit;
        }
        
        if (ds_map_exists(room_map, "players")){
        
            var player_list = ds_map_find_value(room_map, "players");
            
            for (var i=0; i &lt; ds_list_size(player_list); i++){
                var player = ds_list_find_value(player_list,i);
                playername[i] = ds_map_find_value(player, "userName");
            }
       }
       
       if (ds_map_exists(room_map, "currentMission")){
        
            var currentMission = ds_map_find_value(room_map, "currentMission");
            mission_index = ds_map_find_value(currentMission, "index");
            status = ds_map_find_value(currentMission, "status");
            quester_list = ds_map_find_value(currentMission, "questers");
            vote_outcome = ds_map_find_value(currentMission, "voteOutcome");
            leader = ds_map_find_value(ds_map_find_value(currentMission, "leader"),"userName");
            overall_outcome = ds_map_find_value(currentMission, "overallOutcome");
            
            for (var i=0; i &lt; ds_list_size(quester_list); i++){
                var quester = ds_list_find_value(quester_list,i);
                ds_list_add(questers, ds_map_find_value(quester, "userName"));
            }
       }
       
       if (ds_map_exists(room_map, "overallOutcome")){
        
            var oc = ds_map_find_value(room_map, "overallOutcome");
            
            if oc == "SUCCEEDED" {
                global.game_state = "WIN";
            } else if oc == "FAILED" {
                global.game_state = "LOSE";
            }
       }
       
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
